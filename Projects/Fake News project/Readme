# Fake News Detection Project

## Overview
This project aims to build a machine learning model that can classify news articles as "Fake" or "Not Fake" using various algorithms. The model leverages text data from both fake and true news sources to train and evaluate its accuracy.

## Dataset
The project utilizes two datasets:
- **Fake News Dataset**: Contains news articles that are labeled as fake.
- **True News Dataset**: Contains news articles that are labeled as real.

These datasets are combined to create a balanced dataset for training and testing the model.

## Installation
To run this project, ensure you have the following libraries installed:

```bash
pip install pandas numpy scikit-learn seaborn matplotlib
```

## Data Preparation
1. **Loading Data**: The project reads the datasets from CSV files.
2. **Labeling Data**: Each dataset is labeled with a class (`0` for fake news and `1` for true news).
3. **Sampling**: Ten rows are removed from each dataset for manual testing, and a combined dataset is created.
4. **Preprocessing**: Text preprocessing steps are applied to clean the news articles:
   - Lowercasing the text
   - Removing special characters, URLs, and punctuation
   - Eliminating numbers

## Feature Extraction
The cleaned text data is vectorized using **TF-IDF Vectorization**, which transforms the text data into a numerical format suitable for machine learning models.

## Model Training
Three different models are trained and evaluated:
1. **Logistic Regression**
2. **Decision Tree Classifier**
3. **Random Forest Classifier**

Each model's performance is evaluated using a classification report that includes metrics such as precision, recall, and F1-score.

## Manual Testing
Users can input news articles for manual testing. The trained models will predict whether the input news is "Fake" or "Not A Fake News".

## Usage
To run the project, execute the main script. After the models are trained, you can input news articles when prompted, and the models will provide predictions.

```python
news = str(input())
manual_testing(news)
```

## Results
The classification reports provide detailed insights into the models' performance, showcasing their ability to accurately classify news articles based on the training data.

## Future Work
- Experimenting with more advanced algorithms (e.g., neural networks).
- Implementing hyperparameter tuning for better model performance.
- Expanding the dataset with more varied news sources for a more robust model.

## License
This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## Acknowledgments
- Dataset sources for the fake and true news articles.
- Scikit-learn for providing powerful tools for machine learning.
